{"ast":null,"code":"\"use strict\";\n\n/**\n * Root reference for iframes.\n */\nlet root;\nif (typeof window !== 'undefined') {\n  // Browser window\n  root = window;\n} else if (typeof self === 'undefined') {\n  // Other environments\n  console.warn('Using browser-only version of superagent in non-browser environment');\n  root = void 0;\n} else {\n  // Web Worker\n  root = self;\n}\nconst Emitter = require('component-emitter');\nconst safeStringify = require('fast-safe-stringify');\nconst qs = require('qs');\nconst RequestBase = require('./request-base');\nconst {\n  isObject,\n  mixin,\n  hasOwn\n} = require('./utils');\nconst ResponseBase = require('./response-base');\nconst Agent = require('./agent-base');\n\n/**\n * Noop.\n */\n\nfunction noop() {}\n\n/**\n * Expose `request`.\n */\n\nmodule.exports = function (method, url) {\n  // callback\n  if (typeof url === 'function') {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (arguments.length === 1) {\n    return new exports.Request('GET', method);\n  }\n  return new exports.Request(method, url);\n};\nexports = module.exports;\nconst request = exports;\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = () => {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  }\n  throw new Error('Browser-only version of superagent could not find XHR');\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nconst trim = ''.trim ? s => s.trim() : s => s.replace(/(^\\s*|\\s*$)/g, '');\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(object) {\n  if (!isObject(object)) return object;\n  const pairs = [];\n  for (const key in object) {\n    if (hasOwn(object, key)) pushEncodedKeyValuePair(pairs, key, object[key]);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, value) {\n  if (value === undefined) return;\n  if (value === null) {\n    pairs.push(encodeURI(key));\n    return;\n  }\n  if (Array.isArray(value)) {\n    for (const v of value) {\n      pushEncodedKeyValuePair(pairs, key, v);\n    }\n  } else if (isObject(value)) {\n    for (const subkey in value) {\n      if (hasOwn(value, subkey)) pushEncodedKeyValuePair(pairs, `${key}[${subkey}]`, value[subkey]);\n    }\n  } else {\n    pairs.push(encodeURI(key) + '=' + encodeURIComponent(value));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\nrequest.serializeObject = serialize;\n\n/**\n * Parse the given x-www-form-urlencoded `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseString(string_) {\n  const object = {};\n  const pairs = string_.split('&');\n  let pair;\n  let pos;\n  for (let i = 0, length_ = pairs.length; i < length_; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos === -1) {\n      object[decodeURIComponent(pair)] = '';\n    } else {\n      object[decodeURIComponent(pair.slice(0, pos))] = decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n  return object;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'text/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  form: 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\nrequest.serialize = {\n  'application/x-www-form-urlencoded': qs.stringify,\n  'application/json': safeStringify\n};\n\n/**\n * Default parsers.\n *\n *     superagent.parse['application/xml'] = function(str){\n *       return { object parsed from str };\n *     };\n *\n */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(string_) {\n  const lines = string_.split(/\\r?\\n/);\n  const fields = {};\n  let index;\n  let line;\n  let field;\n  let value;\n  for (let i = 0, length_ = lines.length; i < length_; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    if (index === -1) {\n      // could be empty line, just skip it\n      continue;\n    }\n    field = line.slice(0, index).toLowerCase();\n    value = trim(line.slice(index + 1));\n    fields[field] = value;\n  }\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[/+]json($|[^-\\w])/i.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(request_) {\n  this.req = request_;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = this.req.method !== 'HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text') || typeof this.xhr.responseType === 'undefined' ? this.xhr.responseText : null;\n  this.statusText = this.req.xhr.statusText;\n  let {\n    status\n  } = this.xhr;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n  this._setStatusProperties(status);\n  this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  this.header = this.headers;\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n  if (this.text === null && request_._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body = this.req.method === 'HEAD' ? null : this._parseBody(this.text ? this.text : this.xhr.response);\n  }\n}\nmixin(Response.prototype, ResponseBase.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function (string_) {\n  let parse = request.parse[this.type];\n  if (this.req._parser) {\n    return this.req._parser(this, string_);\n  }\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && string_ && (string_.length > 0 || string_ instanceof Object) ? parse(string_) : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function () {\n  const {\n    req\n  } = this;\n  const {\n    method\n  } = req;\n  const {\n    url\n  } = req;\n  const message = `cannot ${method} ${url} (${this.status})`;\n  const error = new Error(message);\n  error.status = this.status;\n  error.method = method;\n  error.url = url;\n  return error;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  const self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', () => {\n    let error = null;\n    let res = null;\n    try {\n      res = new Response(self);\n    } catch (err) {\n      error = new Error('Parser is unable to parse the response');\n      error.parse = true;\n      error.original = err;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        error.rawResponse = typeof self.xhr.responseType === 'undefined' ? self.xhr.responseText : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        error.status = self.xhr.status ? self.xhr.status : null;\n        error.statusCode = error.status; // backwards-compat only\n      } else {\n        error.rawResponse = null;\n        error.status = null;\n      }\n      return self.callback(error);\n    }\n    self.emit('response', res);\n    let new_error;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_error = new Error(res.statusText || res.text || 'Unsuccessful HTTP response');\n      }\n    } catch (err) {\n      new_error = err; // ok() callback can throw\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_error) {\n      new_error.original = error;\n      new_error.response = res;\n      new_error.status = new_error.status || res.status;\n      self.callback(new_error, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\n// eslint-disable-next-line new-cap\nEmitter(Request.prototype);\nmixin(Request.prototype, RequestBase.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function (type) {\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function (type) {\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function (user, pass, options) {\n  if (arguments.length === 1) pass = '';\n  if (typeof pass === 'object' && pass !== null) {\n    // pass is optional and can be replaced with options\n    options = pass;\n    pass = '';\n  }\n  if (!options) {\n    options = {\n      type: typeof btoa === 'function' ? 'basic' : 'auto'\n    };\n  }\n  const encoder = options.encoder ? options.encoder : string => {\n    if (typeof btoa === 'function') {\n      return btoa(string);\n    }\n    throw new Error('Cannot use basic auth, btoa is not a function');\n  };\n  return this._auth(user, pass, options, encoder);\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function (value) {\n  if (typeof value !== 'string') value = serialize(value);\n  if (value) this._query.push(value);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function (field, file, options) {\n  if (file) {\n    if (this._data) {\n      throw new Error(\"superagent can't mix .send() and .attach()\");\n    }\n    this._getFormData().append(field, file, options || file.name);\n  }\n  return this;\n};\nRequest.prototype._getFormData = function () {\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function (error, res) {\n  if (this._shouldRetry(error, res)) {\n    return this._retry();\n  }\n  const fn = this._callback;\n  this.clearTimeout();\n  if (error) {\n    if (this._maxRetries) error.retries = this._retries - 1;\n    this.emit('error', error);\n  }\n  fn(error, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function () {\n  const error = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  error.crossDomain = true;\n  error.status = this.status;\n  error.method = this.method;\n  error.url = this.url;\n  this.callback(error);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.agent = function () {\n  console.warn('This is not supported in browser version of superagent');\n  return this;\n};\nRequest.prototype.ca = Request.prototype.agent;\nRequest.prototype.buffer = Request.prototype.ca;\n\n// This throws, because it can't send/receive data as expected\nRequest.prototype.write = () => {\n  throw new Error('Streaming is not supported in browser version of superagent');\n};\nRequest.prototype.pipe = Request.prototype.write;\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj host object\n * @return {Boolean} is a host object\n * @api private\n */\nRequest.prototype._isHost = function (object) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return object && typeof object === 'object' && !Array.isArray(object) && Object.prototype.toString.call(object) !== '[object Object]';\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function (fn) {\n  if (this._endCalled) {\n    console.warn('Warning: .end() was called twice. This is not supported in superagent');\n  }\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // querystring\n  this._finalizeQueryString();\n  this._end();\n};\nRequest.prototype._setUploadTimeout = function () {\n  const self = this;\n\n  // upload timeout it's wokrs only if deadline timeout is off\n  if (this._uploadTimeout && !this._uploadTimeoutTimer) {\n    this._uploadTimeoutTimer = setTimeout(() => {\n      self._timeoutError('Upload timeout of ', self._uploadTimeout, 'ETIMEDOUT');\n    }, this._uploadTimeout);\n  }\n};\n\n// eslint-disable-next-line complexity\nRequest.prototype._end = function () {\n  if (this._aborted) return this.callback(new Error('The request has been aborted even before .end() was called'));\n  const self = this;\n  this.xhr = request.getXHR();\n  const {\n    xhr\n  } = this;\n  let data = this._formData || this._data;\n  this._setTimeouts();\n\n  // state change\n  xhr.addEventListener('readystatechange', () => {\n    const {\n      readyState\n    } = xhr;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n    if (readyState !== 4) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    let status;\n    try {\n      status = xhr.status;\n    } catch (err) {\n      status = 0;\n    }\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  });\n\n  // progress\n  const handleProgress = (direction, e) => {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n      if (e.percent === 100) {\n        clearTimeout(self._uploadTimeoutTimer);\n      }\n    }\n    e.direction = direction;\n    self.emit('progress', e);\n  };\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.addEventListener('progress', handleProgress.bind(null, 'download'));\n      if (xhr.upload) {\n        xhr.upload.addEventListener('progress', handleProgress.bind(null, 'upload'));\n      }\n    } catch (err) {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n  if (xhr.upload) {\n    this._setUploadTimeout();\n  }\n\n  // initiate request\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (!this._formData && this.method !== 'GET' && this.method !== 'HEAD' && typeof data !== 'string' && !this._isHost(data)) {\n    // serialize stuff\n    const contentType = this._header['content-type'];\n    let serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (const field in this.header) {\n    if (this.header[field] === null) continue;\n    if (hasOwn(this.header, field)) xhr.setRequestHeader(field, this.header[field]);\n  }\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data === 'undefined' ? null : data);\n};\nrequest.agent = () => new Agent();\nfor (const method of ['GET', 'POST', 'OPTIONS', 'PATCH', 'PUT', 'DELETE']) {\n  Agent.prototype[method.toLowerCase()] = function (url, fn) {\n    const request_ = new request.Request(method, url);\n    this._setDefaults(request_);\n    if (fn) {\n      request_.end(fn);\n    }\n    return request_;\n  };\n}\nAgent.prototype.del = Agent.prototype.delete;\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = (url, data, fn) => {\n  const request_ = request('GET', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n  if (data) request_.query(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = (url, data, fn) => {\n  const request_ = request('HEAD', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n  if (data) request_.query(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = (url, data, fn) => {\n  const request_ = request('OPTIONS', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n  if (data) request_.send(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, data, fn) {\n  const request_ = request('DELETE', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n  if (data) request_.send(data);\n  if (fn) request_.end(fn);\n  return request_;\n}\nrequest.del = del;\nrequest.delete = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = (url, data, fn) => {\n  const request_ = request('PATCH', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n  if (data) request_.send(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = (url, data, fn) => {\n  const request_ = request('POST', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n  if (data) request_.send(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = (url, data, fn) => {\n  const request_ = request('PUT', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n  if (data) request_.send(data);\n  if (fn) request_.end(fn);\n  return request_;\n};","map":{"version":3,"names":["root","window","self","console","warn","Emitter","require","safeStringify","qs","RequestBase","isObject","mixin","hasOwn","ResponseBase","Agent","noop","module","exports","method","url","Request","end","arguments","length","request","getXHR","XMLHttpRequest","Error","trim","s","replace","serialize","object","pairs","key","pushEncodedKeyValuePair","join","value","undefined","push","encodeURI","Array","isArray","v","subkey","encodeURIComponent","serializeObject","parseString","string_","split","pair","pos","i","length_","indexOf","decodeURIComponent","slice","types","html","json","xml","urlencoded","form","stringify","parse","JSON","parseHeader","lines","fields","index","line","field","toLowerCase","isJSON","mime","test","Response","request_","req","xhr","text","responseType","responseText","statusText","status","_setStatusProperties","headers","getAllResponseHeaders","header","getResponseHeader","_setHeaderProperties","_responseType","body","response","_parseBody","prototype","type","_parser","Object","toError","message","error","_query","_header","on","res","err","original","rawResponse","statusCode","callback","emit","new_error","_isResponseOK","set","accept","auth","user","pass","options","btoa","encoder","string","_auth","query","attach","file","_data","_getFormData","append","name","_formData","FormData","_shouldRetry","_retry","fn","_callback","clearTimeout","_maxRetries","retries","_retries","crossDomainError","crossDomain","agent","ca","buffer","write","pipe","_isHost","toString","call","_endCalled","_finalizeQueryString","_end","_setUploadTimeout","_uploadTimeout","_uploadTimeoutTimer","setTimeout","_timeoutError","_aborted","data","_setTimeouts","addEventListener","readyState","_responseTimeoutTimer","timedout","handleProgress","direction","e","total","percent","loaded","hasListeners","bind","upload","username","password","open","_withCredentials","withCredentials","contentType","_serializer","setRequestHeader","send","_setDefaults","del","delete","get","head","patch","post","put"],"sources":["C:\\Users\\test1\\Desktop\\Netflix2.0\\netflix\\node_modules\\superagent\\src\\client.js"],"sourcesContent":["/**\n * Root reference for iframes.\n */\n\nlet root;\nif (typeof window !== 'undefined') {\n  // Browser window\n  root = window;\n} else if (typeof self === 'undefined') {\n  // Other environments\n  console.warn(\n    'Using browser-only version of superagent in non-browser environment'\n  );\n  root = this;\n} else {\n  // Web Worker\n  root = self;\n}\n\nconst Emitter = require('component-emitter');\nconst safeStringify = require('fast-safe-stringify');\nconst qs = require('qs');\nconst RequestBase = require('./request-base');\nconst { isObject, mixin, hasOwn } = require('./utils');\nconst ResponseBase = require('./response-base');\nconst Agent = require('./agent-base');\n\n/**\n * Noop.\n */\n\nfunction noop() {}\n\n/**\n * Expose `request`.\n */\n\nmodule.exports = function (method, url) {\n  // callback\n  if (typeof url === 'function') {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (arguments.length === 1) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n};\n\nexports = module.exports;\n\nconst request = exports;\n\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = () => {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  }\n\n  throw new Error('Browser-only version of superagent could not find XHR');\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nconst trim = ''.trim ? (s) => s.trim() : (s) => s.replace(/(^\\s*|\\s*$)/g, '');\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(object) {\n  if (!isObject(object)) return object;\n  const pairs = [];\n  for (const key in object) {\n    if (hasOwn(object, key)) pushEncodedKeyValuePair(pairs, key, object[key]);\n  }\n\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, value) {\n  if (value === undefined) return;\n  if (value === null) {\n    pairs.push(encodeURI(key));\n    return;\n  }\n\n  if (Array.isArray(value)) {\n    for (const v of value) {\n      pushEncodedKeyValuePair(pairs, key, v);\n    }\n  } else if (isObject(value)) {\n    for (const subkey in value) {\n      if (hasOwn(value, subkey))\n        pushEncodedKeyValuePair(pairs, `${key}[${subkey}]`, value[subkey]);\n    }\n  } else {\n    pairs.push(encodeURI(key) + '=' + encodeURIComponent(value));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\nrequest.serializeObject = serialize;\n\n/**\n * Parse the given x-www-form-urlencoded `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseString(string_) {\n  const object = {};\n  const pairs = string_.split('&');\n  let pair;\n  let pos;\n\n  for (let i = 0, length_ = pairs.length; i < length_; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos === -1) {\n      object[decodeURIComponent(pair)] = '';\n    } else {\n      object[decodeURIComponent(pair.slice(0, pos))] = decodeURIComponent(\n        pair.slice(pos + 1)\n      );\n    }\n  }\n\n  return object;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'text/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  form: 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\nrequest.serialize = {\n  'application/x-www-form-urlencoded': qs.stringify,\n  'application/json': safeStringify\n};\n\n/**\n * Default parsers.\n *\n *     superagent.parse['application/xml'] = function(str){\n *       return { object parsed from str };\n *     };\n *\n */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(string_) {\n  const lines = string_.split(/\\r?\\n/);\n  const fields = {};\n  let index;\n  let line;\n  let field;\n  let value;\n\n  for (let i = 0, length_ = lines.length; i < length_; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    if (index === -1) {\n      // could be empty line, just skip it\n      continue;\n    }\n\n    field = line.slice(0, index).toLowerCase();\n    value = trim(line.slice(index + 1));\n    fields[field] = value;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[/+]json($|[^-\\w])/i.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(request_) {\n  this.req = request_;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text =\n    (this.req.method !== 'HEAD' &&\n      (this.xhr.responseType === '' || this.xhr.responseType === 'text')) ||\n    typeof this.xhr.responseType === 'undefined'\n      ? this.xhr.responseText\n      : null;\n  this.statusText = this.req.xhr.statusText;\n  let { status } = this.xhr;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  this._setStatusProperties(status);\n  this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  this.header = this.headers;\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n\n  if (this.text === null && request_._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body =\n      this.req.method === 'HEAD'\n        ? null\n        : this._parseBody(this.text ? this.text : this.xhr.response);\n  }\n}\n\nmixin(Response.prototype, ResponseBase.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function (string_) {\n  let parse = request.parse[this.type];\n  if (this.req._parser) {\n    return this.req._parser(this, string_);\n  }\n\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n\n  return parse && string_ && (string_.length > 0 || string_ instanceof Object)\n    ? parse(string_)\n    : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function () {\n  const { req } = this;\n  const { method } = req;\n  const { url } = req;\n\n  const message = `cannot ${method} ${url} (${this.status})`;\n  const error = new Error(message);\n  error.status = this.status;\n  error.method = method;\n  error.url = url;\n\n  return error;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  const self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', () => {\n    let error = null;\n    let res = null;\n\n    try {\n      res = new Response(self);\n    } catch (err) {\n      error = new Error('Parser is unable to parse the response');\n      error.parse = true;\n      error.original = err;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        error.rawResponse =\n          typeof self.xhr.responseType === 'undefined'\n            ? self.xhr.responseText\n            : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        error.status = self.xhr.status ? self.xhr.status : null;\n        error.statusCode = error.status; // backwards-compat only\n      } else {\n        error.rawResponse = null;\n        error.status = null;\n      }\n\n      return self.callback(error);\n    }\n\n    self.emit('response', res);\n\n    let new_error;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_error = new Error(\n          res.statusText || res.text || 'Unsuccessful HTTP response'\n        );\n      }\n    } catch (err) {\n      new_error = err; // ok() callback can throw\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_error) {\n      new_error.original = error;\n      new_error.response = res;\n      new_error.status = new_error.status || res.status;\n      self.callback(new_error, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\n// eslint-disable-next-line new-cap\nEmitter(Request.prototype);\n\nmixin(Request.prototype, RequestBase.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function (type) {\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function (type) {\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function (user, pass, options) {\n  if (arguments.length === 1) pass = '';\n  if (typeof pass === 'object' && pass !== null) {\n    // pass is optional and can be replaced with options\n    options = pass;\n    pass = '';\n  }\n\n  if (!options) {\n    options = {\n      type: typeof btoa === 'function' ? 'basic' : 'auto'\n    };\n  }\n\n  const encoder = options.encoder\n    ? options.encoder\n    : (string) => {\n        if (typeof btoa === 'function') {\n          return btoa(string);\n        }\n\n        throw new Error('Cannot use basic auth, btoa is not a function');\n      };\n\n  return this._auth(user, pass, options, encoder);\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function (value) {\n  if (typeof value !== 'string') value = serialize(value);\n  if (value) this._query.push(value);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function (field, file, options) {\n  if (file) {\n    if (this._data) {\n      throw new Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n\n  return this;\n};\n\nRequest.prototype._getFormData = function () {\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function (error, res) {\n  if (this._shouldRetry(error, res)) {\n    return this._retry();\n  }\n\n  const fn = this._callback;\n  this.clearTimeout();\n\n  if (error) {\n    if (this._maxRetries) error.retries = this._retries - 1;\n    this.emit('error', error);\n  }\n\n  fn(error, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function () {\n  const error = new Error(\n    'Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.'\n  );\n  error.crossDomain = true;\n\n  error.status = this.status;\n  error.method = this.method;\n  error.url = this.url;\n\n  this.callback(error);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.agent = function () {\n  console.warn('This is not supported in browser version of superagent');\n  return this;\n};\n\nRequest.prototype.ca = Request.prototype.agent;\nRequest.prototype.buffer = Request.prototype.ca;\n\n// This throws, because it can't send/receive data as expected\nRequest.prototype.write = () => {\n  throw new Error(\n    'Streaming is not supported in browser version of superagent'\n  );\n};\n\nRequest.prototype.pipe = Request.prototype.write;\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj host object\n * @return {Boolean} is a host object\n * @api private\n */\nRequest.prototype._isHost = function (object) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return (\n    object &&\n    typeof object === 'object' &&\n    !Array.isArray(object) &&\n    Object.prototype.toString.call(object) !== '[object Object]'\n  );\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function (fn) {\n  if (this._endCalled) {\n    console.warn(\n      'Warning: .end() was called twice. This is not supported in superagent'\n    );\n  }\n\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // querystring\n  this._finalizeQueryString();\n\n  this._end();\n};\n\nRequest.prototype._setUploadTimeout = function () {\n  const self = this;\n\n  // upload timeout it's wokrs only if deadline timeout is off\n  if (this._uploadTimeout && !this._uploadTimeoutTimer) {\n    this._uploadTimeoutTimer = setTimeout(() => {\n      self._timeoutError(\n        'Upload timeout of ',\n        self._uploadTimeout,\n        'ETIMEDOUT'\n      );\n    }, this._uploadTimeout);\n  }\n};\n\n// eslint-disable-next-line complexity\nRequest.prototype._end = function () {\n  if (this._aborted)\n    return this.callback(\n      new Error('The request has been aborted even before .end() was called')\n    );\n\n  const self = this;\n  this.xhr = request.getXHR();\n  const { xhr } = this;\n  let data = this._formData || this._data;\n\n  this._setTimeouts();\n\n  // state change\n  xhr.addEventListener('readystatechange', () => {\n    const { readyState } = xhr;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n\n    if (readyState !== 4) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    let status;\n    try {\n      status = xhr.status;\n    } catch (err) {\n      status = 0;\n    }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n\n    self.emit('end');\n  });\n\n  // progress\n  const handleProgress = (direction, e) => {\n    if (e.total > 0) {\n      e.percent = (e.loaded / e.total) * 100;\n\n      if (e.percent === 100) {\n        clearTimeout(self._uploadTimeoutTimer);\n      }\n    }\n\n    e.direction = direction;\n    self.emit('progress', e);\n  };\n\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.addEventListener('progress', handleProgress.bind(null, 'download'));\n      if (xhr.upload) {\n        xhr.upload.addEventListener(\n          'progress',\n          handleProgress.bind(null, 'upload')\n        );\n      }\n    } catch (err) {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  if (xhr.upload) {\n    this._setUploadTimeout();\n  }\n\n  // initiate request\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (\n    !this._formData &&\n    this.method !== 'GET' &&\n    this.method !== 'HEAD' &&\n    typeof data !== 'string' &&\n    !this._isHost(data)\n  ) {\n    // serialize stuff\n    const contentType = this._header['content-type'];\n    let serialize =\n      this._serializer ||\n      request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (const field in this.header) {\n    if (this.header[field] === null) continue;\n\n    if (hasOwn(this.header, field))\n      xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data === 'undefined' ? null : data);\n};\n\nrequest.agent = () => new Agent();\n\nfor (const method of ['GET', 'POST', 'OPTIONS', 'PATCH', 'PUT', 'DELETE']) {\n  Agent.prototype[method.toLowerCase()] = function (url, fn) {\n    const request_ = new request.Request(method, url);\n    this._setDefaults(request_);\n    if (fn) {\n      request_.end(fn);\n    }\n\n    return request_;\n  };\n}\n\nAgent.prototype.del = Agent.prototype.delete;\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = (url, data, fn) => {\n  const request_ = request('GET', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) request_.query(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = (url, data, fn) => {\n  const request_ = request('HEAD', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) request_.query(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = (url, data, fn) => {\n  const request_ = request('OPTIONS', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) request_.send(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, data, fn) {\n  const request_ = request('DELETE', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) request_.send(data);\n  if (fn) request_.end(fn);\n  return request_;\n}\n\nrequest.del = del;\nrequest.delete = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = (url, data, fn) => {\n  const request_ = request('PATCH', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) request_.send(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = (url, data, fn) => {\n  const request_ = request('POST', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) request_.send(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = (url, data, fn) => {\n  const request_ = request('PUT', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) request_.send(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}